server:
  port: ${SERVER_PORT:8090}

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:6544/ledger}
    username: ${SPRING_DATASOURCE_USERNAME:ledger}
    password: ${SPRING_DATASOURCE_PASSWORD:ledger}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.show_sql: false
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    consumer:
      group-id: ledger-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


# Chaos Monkey Configuration
chaos:
  monkey:
    enabled: true
    watcher:
      controller: true
      rest-controller: true
      service: true
      repository: true
    assaults:
      level: 5  # 50% chance of assault
      latency-active: true
      latency-range-start: 2000
      latency-range-end: 5000
      exceptions-active: true
      kill-application-active: false
      memory-active: false

# Management endpoints
management:
  endpoint:
    chaosmonkey:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,chaosmonkey